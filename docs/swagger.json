{
  "swagger": "2.0",
  "info": {
    "title": "InstiApp API",
    "description": "",
    "version": ""
  },
  "host": "localhost",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/bodies": {
      "get": {
        "operationId": "bodies_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Body",
        "summary": "Body",
        "tags": [
          "bodies"
        ]
      },
      "post": {
        "operationId": "bodies_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "short_description": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "image_url": {
                  "description": "",
                  "type": "string"
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                },
                "blog_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "description": "Create Body.\nNeeds the `AddB` Institute Role permission.",
        "summary": "Create Body.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "bodies"
        ]
      }
    },
    "/api/bodies/{id}": {
      "get": {
        "operationId": "bodies_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body.",
            "type": "string"
          }
        ],
        "description": "Get Body.\nRetrieve by `uuid` or `str_id`.",
        "summary": "Get Body.",
        "tags": [
          "bodies"
        ]
      },
      "put": {
        "operationId": "bodies_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body.",
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "short_description": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "image_url": {
                  "description": "",
                  "type": "string"
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                },
                "blog_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "description": "Update Body.\nNeeds the `UpdB` permission.",
        "summary": "Update Body.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "bodies"
        ]
      },
      "delete": {
        "operationId": "bodies_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body.",
            "type": "string"
          }
        ],
        "description": "Delete Body.\nNeeds the `DelB` institute permission.",
        "summary": "Delete Body.",
        "tags": [
          "bodies"
        ]
      }
    },
    "/api/bodies/{id}/followers": {
      "get": {
        "operationId": "bodies_followers_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body.",
            "type": "string"
          }
        ],
        "description": "List followers of body.",
        "summary": "List followers of body.",
        "tags": [
          "bodies"
        ]
      }
    },
    "/api/events": {
      "get": {
        "operationId": "events_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "List Events.\nList fresh events prioritized for the current user.",
        "summary": "List Events.",
        "tags": [
          "events"
        ]
      },
      "post": {
        "operationId": "events_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "image_url": {
                  "description": "",
                  "type": "string"
                },
                "start_time": {
                  "description": "",
                  "type": "string"
                },
                "end_time": {
                  "description": "",
                  "type": "string"
                },
                "all_day": {
                  "description": "",
                  "type": "boolean"
                },
                "bodies_id": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "venue_ids": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "start_time",
                "end_time",
                "bodies_id"
              ]
            }
          }
        ],
        "description": "Create Event.\nNeeds `AddE` permission for each body to be associated.",
        "summary": "Create Event.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "events"
        ]
      }
    },
    "/api/events/{id}": {
      "get": {
        "operationId": "events_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Event.",
            "type": "string"
          }
        ],
        "description": "Get Event.\nGet by `uuid` or `str_id`",
        "summary": "Get Event.",
        "tags": [
          "events"
        ]
      },
      "put": {
        "operationId": "events_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Event.",
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "image_url": {
                  "description": "",
                  "type": "string"
                },
                "start_time": {
                  "description": "",
                  "type": "string"
                },
                "end_time": {
                  "description": "",
                  "type": "string"
                },
                "all_day": {
                  "description": "",
                  "type": "boolean"
                },
                "bodies_id": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "venue_ids": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "start_time",
                "end_time",
                "bodies_id"
              ]
            }
          }
        ],
        "description": "Update Event.\nNeeds BodyRole with `UpdE` for at least one associated body.\nDisassociating bodies from the event requires the `DelE`\npermission and associating needs `AddE`",
        "summary": "Update Event.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "events"
        ]
      },
      "delete": {
        "operationId": "events_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Event.",
            "type": "string"
          }
        ],
        "description": "Delete Event.\nNeeds `DelE` permission for all associated bodies.",
        "summary": "Delete Event.",
        "tags": [
          "events"
        ]
      }
    },
    "/api/locations": {
      "get": {
        "operationId": "locations_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "List reusable locations.",
        "summary": "List reusable locations.",
        "tags": [
          "locations"
        ]
      },
      "post": {
        "operationId": "locations_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "lat": {
                  "description": "",
                  "type": "number"
                },
                "lng": {
                  "description": "",
                  "type": "number"
                },
                "reusable": {
                  "description": "",
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "description": "Create a Location.\nNeeds 'Location' institute permission.",
        "summary": "Create a Location.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "locations"
        ]
      }
    },
    "/api/locations/{id}": {
      "get": {
        "operationId": "locations_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Location.",
            "type": "string"
          }
        ],
        "description": "Location",
        "summary": "Location",
        "tags": [
          "locations"
        ]
      },
      "put": {
        "operationId": "locations_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Location.",
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "lat": {
                  "description": "",
                  "type": "number"
                },
                "lng": {
                  "description": "",
                  "type": "number"
                },
                "reusable": {
                  "description": "",
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "description": "Update Location.\nThis requires the user to have the 'Location' institute permission\nor BodyRole for the event using the location if the it is not reusable.",
        "summary": "Update Location.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "locations"
        ]
      },
      "delete": {
        "operationId": "locations_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Location.",
            "type": "string"
          }
        ],
        "description": "Delete a Location.\nNeeds 'Location' institute permission.",
        "summary": "Delete a Location.",
        "tags": [
          "locations"
        ]
      }
    },
    "/api/login": {
      "get": {
        "operationId": "login_0",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Log in.\nUses the `code` and `redir` query parameters.",
        "summary": "Log in."
      }
    },
    "/api/login/get-user": {
      "get": {
        "operationId": "login_get_user",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get session and profile.",
        "summary": "Get session and profile.",
        "tags": [
          "login"
        ]
      }
    },
    "/api/logout": {
      "get": {
        "operationId": "logout",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Log out.",
        "summary": "Log out."
      }
    },
    "/api/news": {
      "get": {
        "operationId": "news_feed",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get Feed.",
        "summary": "Get Feed."
      }
    },
    "/api/placement-blog": {
      "get": {
        "operationId": "placement_blog",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get Placement Blog.",
        "summary": "Get Placement Blog."
      }
    },
    "/api/roles": {
      "get": {
        "operationId": "roles_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Body Role",
        "summary": "Body Role",
        "tags": [
          "roles"
        ]
      },
      "post": {
        "operationId": "roles_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "inheritable": {
                  "description": "",
                  "type": "boolean"
                },
                "body": {
                  "description": "",
                  "type": "string"
                },
                "permissions": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "users": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "body",
                "permissions",
                "users"
              ]
            }
          }
        ],
        "description": "Body Role",
        "summary": "Body Role",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "roles"
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "operationId": "roles_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body Role.",
            "type": "string"
          }
        ],
        "description": "Body Role",
        "summary": "Body Role",
        "tags": [
          "roles"
        ]
      },
      "put": {
        "operationId": "roles_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body Role.",
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "inheritable": {
                  "description": "",
                  "type": "boolean"
                },
                "body": {
                  "description": "",
                  "type": "string"
                },
                "permissions": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "users": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "body",
                "permissions",
                "users"
              ]
            }
          }
        ],
        "description": "Body Role",
        "summary": "Body Role",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "roles"
        ]
      },
      "delete": {
        "operationId": "roles_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Body Role.",
            "type": "string"
          }
        ],
        "description": "Body Role",
        "summary": "Body Role",
        "tags": [
          "roles"
        ]
      }
    },
    "/api/training-blog": {
      "get": {
        "operationId": "training_blog",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get Training Blog.",
        "summary": "Get Training Blog."
      }
    },
    "/api/upload": {
      "get": {
        "operationId": "upload_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Upload",
        "summary": "Upload",
        "tags": [
          "upload"
        ]
      },
      "post": {
        "operationId": "upload_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "picture": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "picture"
              ]
            }
          }
        ],
        "description": "Upload file.",
        "summary": "Upload file.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "upload"
        ]
      }
    },
    "/api/upload/{id}": {
      "get": {
        "operationId": "upload_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Uploaded Image.",
            "type": "string"
          }
        ],
        "description": "Upload",
        "summary": "Upload",
        "tags": [
          "upload"
        ]
      },
      "delete": {
        "operationId": "upload_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Uploaded Image.",
            "type": "string"
          }
        ],
        "description": "Delete file entry.",
        "summary": "Delete file entry.",
        "tags": [
          "upload"
        ]
      }
    },
    "/api/user-me": {
      "get": {
        "operationId": "user-me_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get current user.",
        "summary": "Get current user.",
        "tags": [
          "user-me"
        ]
      },
      "put": {
        "operationId": "user-me_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "profile_pic": {
                  "description": "",
                  "type": "string"
                },
                "roll_no": {
                  "description": "",
                  "type": "string"
                },
                "contact_no": {
                  "description": "",
                  "type": "string"
                },
                "about": {
                  "description": "",
                  "type": "string"
                },
                "followed_bodies_id": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                },
                "ldap_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "followed_bodies_id"
              ]
            }
          }
        ],
        "description": "Update current user.",
        "summary": "Update current user.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user-me"
        ]
      },
      "patch": {
        "operationId": "user-me_partial_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "profile_pic": {
                  "description": "",
                  "type": "string"
                },
                "roll_no": {
                  "description": "",
                  "type": "string"
                },
                "contact_no": {
                  "description": "",
                  "type": "string"
                },
                "about": {
                  "description": "",
                  "type": "string"
                },
                "followed_bodies_id": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "website_url": {
                  "description": "",
                  "type": "string"
                },
                "ldap_id": {
                  "description": "",
                  "type": "string"
                }
              }
            }
          }
        ],
        "description": "Update current user.",
        "summary": "Update current user.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user-me"
        ]
      }
    },
    "/api/user-me/events": {
      "get": {
        "operationId": "user-me_get_my_events",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Current user's created events.",
        "summary": "Current user's created events.",
        "tags": [
          "user-me"
        ]
      }
    },
    "/api/user-me/roles": {
      "get": {
        "operationId": "user-me_get_my_roles",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "Get roles with nested events.",
        "summary": "Get roles with nested events.",
        "tags": [
          "user-me"
        ]
      }
    },
    "/api/user-me/ues/{event_pk}": {
      "get": {
        "operationId": "user-me_set_ues_me",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "event_pk",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Set UES for current user.\nThis will create or update if record exists.",
        "summary": "Set UES for current user.",
        "tags": [
          "user-me"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "users_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "description": "UserProfile",
        "summary": "UserProfile",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "users_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A UUID string identifying this Profile.",
            "type": "string"
          }
        ],
        "description": "UserProfile",
        "summary": "UserProfile",
        "tags": [
          "users"
        ]
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}